<!DOCTYPE html>
<html>
<head>
    <title>Flappy Bird</title>
</head>
<body>
    <canvas id="canvas" width="800" height="800"></canvas>
    <script>
        var canvas = document.getElementById("canvas");
        var ctx = canvas.getContext("2d");
        var deathSound = new Audio("death.mp3");

        function Game(ctx, deathSound) {
            this.ctx = ctx;
            this.deathSound = deathSound;
            this.backgroundImage = new Image();
            this.backgroundImage.src = "background.png";
            this.birdImage = new Image();
            this.birdImage.src = "bird.png";
            this.pipeImage = new Image();
            this.pipeImage.src = "pipe.png";
            this.score = 0;
            this.highScore = localStorage.getItem("flappy-bird-highscore") || 0;
            this.pipeInterval = 120;
            this.pipeSpeed = 2;
            this.gameOver = false;
            this.pipeList = [];
            this.bird = new Bird(this);
        }

        Game.prototype.start = function() {
            var self = this;
            this.reset();
            this.draw();
            setInterval(function() {
                self.update();
                self.draw();
            }, 1000/60);
            setInterval(function() {
                if (!self.gameOver) {
                    self.addPipe();
                }
            }, this.pipeInterval);
            canvas.addEventListener("click", function() {
                if (!self.gameOver) {
                    self.bird.flap();
                } else {
                    self.reset();
                }
            });
        };

        Game.prototype.reset = function() {
            this.bird.reset();
            this.score = 0;
            this.gameOver = false;
            this.pipeList = [];
            this.pipeInterval = 120;
            this.pipeSpeed = 2;
        };

        Game.prototype.update = function() {
            this.bird.update();
            for (var i = 0; i < this.pipeList.length; i++) {
                this.pipeList[i].update();
            }
            if (this.pipeList.length > 0 && this.pipeList[0].x + this.pipeList[0].width < 0) {
                this.pipeList.shift();
                this.score++;
                if (this.score > this.highScore) {
                    this.highScore = this.score;
                    localStorage.setItem("flappy-bird-highscore", this.highScore);
                }
                if (this.score % 5 === 0) {
                    this.pipeInterval--;
                    this.pipeSpeed += 0.2;
                }
            }
            if (this.checkCollision()) {
                this.gameOver = true;
                if (this.score > this.highScore) {
                    this.highScore = this.score;
                    localStorage.setItem("flappy-bird-highscore", this.highScore);
                }
            }
        };

        Game.prototype.draw = function() {
            this.ctx.drawImage(this.backgroundImage, 0, 0);
            for (var i = 0; i < this.pipeList.length; i++) {
                this.pipeList[i].draw();
            }
            this.bird.draw();
            this.ctx.fillStyle = "#fff";
            this.ctx.font = "36px Arial";
            this.ctx.fillText("Score: " + this.score, 20, 50);
            this.ctx.fillText("High Score: " + this.highScore, 20, 90);
            if (this.gameOver) {
                this.ctx.fillText("Game Over", canvas.width/2 - 80, canvas.height/2 - 50);
                this.ctx.fillText("Click to play again", canvas.width
