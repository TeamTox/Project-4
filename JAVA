import java.applet.Applet;
import java.awt.*;
import java.awt.event.*;

public class FlappyBird extends Applet implements Runnable, MouseListener {
    
    int WIDTH = 800, HEIGHT = 800;
    Thread thread;
    Bird bird;
    boolean gameOver = false;
    Pipe[] pipes = new Pipe[4];
    int score = 0;
    
    public void init() {
        setSize(WIDTH, HEIGHT);
        setBackground(Color.BLACK);
        addMouseListener(this);
        bird = new Bird();
        for (int i = 0; i < pipes.length; i++) {
            pipes[i] = new Pipe(i * 300 + 400);
        }
    }
    
    public void start() {
        thread = new Thread(this);
        thread.start();
    }
    
    public void stop() {
        thread = null;
    }
    
    public void run() {
        while (thread != null) {
            bird.update();
            for (int i = 0; i < pipes.length; i++) {
                pipes[i].update();
                if (pipes[i].collides(bird)) {
                    gameOver = true;
                    stop();
                }
                if (pipes[i].x < bird.x && !pipes[i].scored) {
                    score++;
                    pipes[i].scored = true;
                }
            }
            repaint();
            try {
                Thread.sleep(10);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
    
    public void paint(Graphics g) {
        g.setColor(Color.WHITE);
        g.setFont(new Font("Arial", Font.BOLD, 30));
        g.drawString("Score: " + score, 20, 40);
        bird.draw(g);
        for (int i = 0; i < pipes.length; i++) {
            pipes[i].draw(g);
        }
        if (gameOver) {
            g.setColor(Color.RED);
            g.setFont(new Font("Arial", Font.BOLD, 80));
            g.drawString("GAME OVER", 120, HEIGHT/2);
        }
    }
    
    public void update(Graphics g) {
        paint(g);
    }
    
    public void mouseClicked(MouseEvent e) {
        bird.jump();
    }
    
    public void mousePressed(MouseEvent e) {}
    public void mouseReleased(MouseEvent e) {}
    public void mouseEntered(MouseEvent e) {}
    public void mouseExited(MouseEvent e) {}
    
}

class Bird {
    
    int x = 200, y = 400, dy = 0;
    int size = 40;
    int gravity = 1;
    
    public void update() {
        dy += gravity;
        y += dy;
        if (y < 0 || y > 800) {
            y = 400;
            dy = 0;
        }
    }
    
    public void draw(Graphics g) {
        g.setColor(Color.YELLOW);
        g.fillOval(x, y, size, size);
    }
    
    public void jump() {
        dy = -20;
    }
    
}

class Pipe {
    
    int x, y, width = 50, gap = 200, speed = 3;
    boolean scored = false;
    
    public Pipe(int x) {
        this.x = x;
        this.y = (int)(Math.random() * 400) + 200;
    }
    
    public void update() {
        x -= speed;
        if (x < -width) {
            x = 800;
            y = (int)(Math.random() * 400) + 200;
            scored = false;
        }
    }
    
